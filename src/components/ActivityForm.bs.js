// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var ReasonApollo = require("reason-apollo/src/ReasonApollo.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Styles$ReactTemplate = require("../Styles.bs.js");

var Graphql_error = Caml_exceptions.create("ActivityForm-ReactTemplate.AddActivity.Graphql_error");

var ppx_printed_query = "mutation AddActivity($skillId: ID!, $description: String!)  {\ncreateActivity(description: $description, skillId: $skillId)  {\nid  \n}\n}";

function parse(value) {
  var match = Js_json.decodeObject(value);
  if (match) {
    var value$1 = match[0]["createActivity"];
    var match$1 = Js_json.decodeNull(value$1);
    var tmp;
    if (match$1) {
      tmp = /* None */0;
    } else {
      var match$2 = Js_json.decodeObject(value$1);
      var tmp$1;
      if (match$2) {
        var value$2 = match$2[0]["id"];
        var match$3 = Js_json.decodeString(value$2);
        var tmp$2;
        if (match$3) {
          tmp$2 = match$3[0];
        } else {
          throw Graphql_error;
        }
        tmp$1 = {
          id: tmp$2
        };
      } else {
        throw Graphql_error;
      }
      tmp = /* Some */[tmp$1];
    }
    return {
            createActivity: tmp
          };
  } else {
    throw Graphql_error;
  }
}

function json_of_optional(encoder, value) {
  if (value) {
    return Curry._1(encoder, value[0]);
  } else {
    return null;
  }
}

function json_of_array(encoder, value) {
  return value.map(Curry.__1(encoder));
}

function json_of_String(value) {
  return value;
}

function json_of_ID(value) {
  return value;
}

function make(skillId, description, _) {
  return {
          query: ppx_printed_query,
          variables: Js_dict.fromList(/* :: */[
                /* tuple */[
                  "skillId",
                  skillId
                ],
                /* :: */[
                  /* tuple */[
                    "description",
                    description
                  ],
                  /* [] */0
                ]
              ]),
          parse: parse
        };
}

function makeWithVariables(variables) {
  var skillId = variables.skillId;
  var description = variables.description;
  return {
          query: ppx_printed_query,
          variables: Js_dict.fromList(/* :: */[
                /* tuple */[
                  "skillId",
                  skillId
                ],
                /* :: */[
                  /* tuple */[
                    "description",
                    description
                  ],
                  /* [] */0
                ]
              ]),
          parse: parse
        };
}

function ret_type() {
  return /* module */[];
}

var MT_Ret = /* module */[];

var AddActivity = /* module */[
  /* Graphql_error */Graphql_error,
  /* ppx_printed_query */ppx_printed_query,
  /* query */ppx_printed_query,
  /* parse */parse,
  /* json_of_optional */json_of_optional,
  /* json_of_array */json_of_array,
  /* json_of_String */json_of_String,
  /* json_of_ID */json_of_ID,
  /* make */make,
  /* makeWithVariables */makeWithVariables,
  /* ret_type */ret_type,
  /* MT_Ret */MT_Ret
];

var AddActivityMutation = ReasonApollo.CreateMutation([
      ppx_printed_query,
      parse
    ]);

function reducer(action, _) {
  return /* Update */Block.__(0, [/* record */[/* description */action[0]]]);
}

var component = ReasonReact.reducerComponent("ActivityForm");

function make$1(skillId, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return ReasonReact.element(/* None */0, /* None */0, Curry._4(AddActivityMutation[/* make */4], /* None */0, /* None */0, /* None */0, (function (mutation, _) {
                                var addActivity = make(skillId, self[/* state */1][/* description */0], /* () */0);
                                return React.createElement("div", {
                                            style: Styles$ReactTemplate.addActivityFormContainer
                                          }, React.createElement("input", {
                                                style: Styles$ReactTemplate.addSkillFormInput,
                                                placeholder: "Activity Description, e.g. Sleepwalked barefoot at 3 AM...",
                                                type: "text",
                                                onChange: (function (evt) {
                                                    var value = evt.target.value;
                                                    return Curry._1(self[/* send */3], /* ChangeDescription */[value]);
                                                  })
                                              }), React.createElement("button", {
                                                style: Styles$ReactTemplate.addSkillFormButton,
                                                onClick: (function () {
                                                    Curry._3(mutation, /* Some */[addActivity.variables], /* Some */[/* array */["ActivitiesOnSkill"]], /* () */0);
                                                    return /* () */0;
                                                  })
                                              }, "Add"));
                              })));
            }),
          /* initialState */(function () {
              return /* record */[/* description */""];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */reducer,
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.AddActivity = AddActivity;
exports.AddActivityMutation = AddActivityMutation;
exports.reducer = reducer;
exports.component = component;
exports.make = make$1;
/* AddActivityMutation Not a pure module */
