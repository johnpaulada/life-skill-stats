// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var ReasonApollo = require("reason-apollo/src/ReasonApollo.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Styles$ReactTemplate = require("../Styles.bs.js");

var Graphql_error = Caml_exceptions.create("AddSkill-ReactTemplate.AddSkill.Graphql_error");

var ppx_printed_query = "mutation AddSkill($name: String!)  {\ncreateSkill(name: $name)  {\nid  \nname  \n_activitiesMeta  {\ncount  \n}\n}\n}";

function parse(value) {
  var match = Js_json.decodeObject(value);
  if (match) {
    var value$1 = match[0]["createSkill"];
    var match$1 = Js_json.decodeNull(value$1);
    var tmp;
    if (match$1) {
      tmp = /* None */0;
    } else {
      var match$2 = Js_json.decodeObject(value$1);
      var tmp$1;
      if (match$2) {
        var value$2 = match$2[0];
        var value$3 = value$2["id"];
        var match$3 = Js_json.decodeString(value$3);
        var tmp$2;
        if (match$3) {
          tmp$2 = match$3[0];
        } else {
          throw Graphql_error;
        }
        var value$4 = value$2["name"];
        var match$4 = Js_json.decodeString(value$4);
        var tmp$3;
        if (match$4) {
          tmp$3 = match$4[0];
        } else {
          throw Graphql_error;
        }
        var value$5 = value$2["_activitiesMeta"];
        var match$5 = Js_json.decodeObject(value$5);
        var tmp$4;
        if (match$5) {
          var value$6 = match$5[0]["count"];
          var match$6 = Js_json.decodeNumber(value$6);
          var tmp$5;
          if (match$6) {
            tmp$5 = match$6[0] | 0;
          } else {
            throw Graphql_error;
          }
          tmp$4 = {
            count: tmp$5
          };
        } else {
          throw Graphql_error;
        }
        tmp$1 = {
          id: tmp$2,
          name: tmp$3,
          _activitiesMeta: tmp$4
        };
      } else {
        throw Graphql_error;
      }
      tmp = /* Some */[tmp$1];
    }
    return {
            createSkill: tmp
          };
  } else {
    throw Graphql_error;
  }
}

function json_of_optional(encoder, value) {
  if (value) {
    return Curry._1(encoder, value[0]);
  } else {
    return null;
  }
}

function json_of_array(encoder, value) {
  return value.map(Curry.__1(encoder));
}

function json_of_String(value) {
  return value;
}

function make(name, _) {
  return {
          query: ppx_printed_query,
          variables: Js_dict.fromList(/* :: */[
                /* tuple */[
                  "name",
                  name
                ],
                /* [] */0
              ]),
          parse: parse
        };
}

function makeWithVariables(variables) {
  var name = variables.name;
  return {
          query: ppx_printed_query,
          variables: Js_dict.fromList(/* :: */[
                /* tuple */[
                  "name",
                  name
                ],
                /* [] */0
              ]),
          parse: parse
        };
}

function ret_type() {
  return /* module */[];
}

var MT_Ret = /* module */[];

var AddSkill = /* module */[
  /* Graphql_error */Graphql_error,
  /* ppx_printed_query */ppx_printed_query,
  /* query */ppx_printed_query,
  /* parse */parse,
  /* json_of_optional */json_of_optional,
  /* json_of_array */json_of_array,
  /* json_of_String */json_of_String,
  /* make */make,
  /* makeWithVariables */makeWithVariables,
  /* ret_type */ret_type,
  /* MT_Ret */MT_Ret
];

var AddSkillMutation = ReasonApollo.CreateMutation([
      ppx_printed_query,
      parse
    ]);

function reducer(action, _) {
  return /* Update */Block.__(0, [/* record */[/* name */action[0]]]);
}

var component = ReasonReact.reducerComponent("AddSkill");

function make$1() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return ReasonReact.element(/* None */0, /* None */0, Curry._4(AddSkillMutation[/* make */4], /* None */0, /* None */0, /* None */0, (function (mutation, _) {
                                var addSkill = make(self[/* state */1][/* name */0], /* () */0);
                                return React.createElement("div", {
                                            style: Styles$ReactTemplate.main
                                          }, React.createElement("div", {
                                                style: Styles$ReactTemplate.addSkillContainer
                                              }, React.createElement("h1", {
                                                    style: Styles$ReactTemplate.addSkillTitle
                                                  }, "Add Skill"), React.createElement("input", {
                                                    style: Styles$ReactTemplate.addSkillFormInput,
                                                    placeholder: "Skill Name, e.g. Somnabulism...",
                                                    type: "text",
                                                    onChange: (function (evt) {
                                                        var value = evt.target.value;
                                                        return Curry._1(self[/* send */3], /* ChangeName */[value]);
                                                      })
                                                  }), React.createElement("button", {
                                                    style: Styles$ReactTemplate.addSkillFormButton,
                                                    onClick: (function () {
                                                        Curry._3(mutation, /* Some */[addSkill.variables], /* Some */[/* array */["AllSkills"]], /* () */0);
                                                        return ReasonReact.Router[/* push */0]("/");
                                                      })
                                                  }, "Add")));
                              })));
            }),
          /* initialState */(function () {
              return /* record */[/* name */""];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */reducer,
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.AddSkill = AddSkill;
exports.AddSkillMutation = AddSkillMutation;
exports.reducer = reducer;
exports.component = component;
exports.make = make$1;
/* AddSkillMutation Not a pure module */
