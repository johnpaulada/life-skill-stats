// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_json = require("bs-platform/lib/js/js_json.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var ReasonApollo = require("reason-apollo/src/ReasonApollo.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Skill$ReactTemplate = require("./Skill.bs.js");
var Styles$ReactTemplate = require("../Styles.bs.js");

var component = ReasonReact.statelessComponent("Home");

var Graphql_error = Caml_exceptions.create("Home-ReactTemplate.AllSkills.Graphql_error");

var ppx_printed_query = "query AllSkills  {\nallSkills  {\nid  \nname  \n_activitiesMeta  {\ncount  \n}\n}\n}";

function parse(value) {
  var match = Js_json.decodeObject(value);
  if (match) {
    var value$1 = match[0]["allSkills"];
    var match$1 = Js_json.decodeArray(value$1);
    var tmp;
    if (match$1) {
      tmp = match$1[0].map((function (value) {
              var match = Js_json.decodeObject(value);
              if (match) {
                var value$1 = match[0];
                var value$2 = value$1["id"];
                var match$1 = Js_json.decodeString(value$2);
                var tmp;
                if (match$1) {
                  tmp = match$1[0];
                } else {
                  throw Graphql_error;
                }
                var value$3 = value$1["name"];
                var match$2 = Js_json.decodeString(value$3);
                var tmp$1;
                if (match$2) {
                  tmp$1 = match$2[0];
                } else {
                  throw Graphql_error;
                }
                var value$4 = value$1["_activitiesMeta"];
                var match$3 = Js_json.decodeObject(value$4);
                var tmp$2;
                if (match$3) {
                  var value$5 = match$3[0]["count"];
                  var match$4 = Js_json.decodeNumber(value$5);
                  var tmp$3;
                  if (match$4) {
                    tmp$3 = match$4[0] | 0;
                  } else {
                    throw Graphql_error;
                  }
                  tmp$2 = {
                    count: tmp$3
                  };
                } else {
                  throw Graphql_error;
                }
                return {
                        id: tmp,
                        name: tmp$1,
                        _activitiesMeta: tmp$2
                      };
              } else {
                throw Graphql_error;
              }
            }));
    } else {
      throw Graphql_error;
    }
    return {
            allSkills: tmp
          };
  } else {
    throw Graphql_error;
  }
}

function make() {
  return {
          query: ppx_printed_query,
          variables: null,
          parse: parse
        };
}

function makeWithVariables() {
  return {
          query: ppx_printed_query,
          variables: null,
          parse: parse
        };
}

function ret_type() {
  return /* module */[];
}

var MT_Ret = /* module */[];

var AllSkills = /* module */[
  /* Graphql_error */Graphql_error,
  /* ppx_printed_query */ppx_printed_query,
  /* query */ppx_printed_query,
  /* parse */parse,
  /* make */make,
  /* makeWithVariables */makeWithVariables,
  /* ret_type */ret_type,
  /* MT_Ret */MT_Ret
];

var AllSkillsQuery = ReasonApollo.CreateQuery([
      ppx_printed_query,
      parse
    ]);

function make$1(onAddSkill, onSkillClick, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(/* None */0, /* None */0, Curry.app(AllSkillsQuery[/* make */3], [
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              (function (param) {
                                  var result = param[/* result */0];
                                  var tmp;
                                  tmp = typeof result === "number" ? React.createElement("div", undefined, "Loading") : (
                                      result.tag ? $$Array.map((function (skill) {
                                                return ReasonReact.element(/* None */0, /* None */0, Skill$ReactTemplate.make(Curry._1(onSkillClick, skill.id), skill.name, skill._activitiesMeta.count, /* array */[]));
                                              }), result[0].allSkills) : React.createElement("div", undefined, result[0].message)
                                    );
                                  return React.createElement("div", {
                                              style: Styles$ReactTemplate.main
                                            }, React.createElement("div", {
                                                  style: Styles$ReactTemplate.body
                                                }, React.createElement("h1", {
                                                      style: Styles$ReactTemplate.name
                                                    }, "John Paul Ada"), React.createElement("h2", {
                                                      style: Styles$ReactTemplate.skillsLabel
                                                    }, "SKILLS"), React.createElement("button", {
                                                      style: Styles$ReactTemplate.addSkill,
                                                      onClick: onAddSkill
                                                    }, "Add Skill"), tmp));
                                })
                            ]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.AllSkills = AllSkills;
exports.AllSkillsQuery = AllSkillsQuery;
exports.make = make$1;
/* component Not a pure module */
