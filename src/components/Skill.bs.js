// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Styles$ReactTemplate = require("../Styles.bs.js");

var component = ReasonReact.statelessComponent("Skill");

function computeLevel(points) {
  return String(points / 5 | 0);
}

function computeProgress(points) {
  return String(points % 5);
}

function make(onSkillClick, name, points, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          style: Styles$ReactTemplate.skillContainer
                        }, React.createElement("h3", {
                              style: Styles$ReactTemplate.skillTitle,
                              onClick: onSkillClick
                            }, name), React.createElement("span", {
                              style: Styles$ReactTemplate.skillPoints
                            }, String(points) + " pts."), React.createElement("div", {
                              style: Styles$ReactTemplate.skillProgressContainer
                            }, React.createElement("progress", {
                                  style: Styles$ReactTemplate.skillProgress,
                                  max: "5",
                                  value: String(points % 5)
                                })), React.createElement("div", {
                              style: Styles$ReactTemplate.skillActionsContainer
                            }, React.createElement("button", {
                                  style: Styles$ReactTemplate.addSkillButton
                                }, "Add"), React.createElement("span", {
                                  style: Styles$ReactTemplate.skillLevel
                                }, "lvl " + String(points / 5 | 0))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.computeLevel = computeLevel;
exports.computeProgress = computeProgress;
exports.make = make;
/* component Not a pure module */
